/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/GUIForms/JFrame.java to edit this template
 */
package revisi_kntl;


import javax.swing.JOptionPane;
import java.sql.*;
import java.awt.HeadlessException;
import java.sql.SQLException;
import javax.swing.JOptionPane;
import javax.swing.table.DefaultTableModel;
import java.sql.Statement;
import javax.swing.table.TableModel;
import koneksi.koneksi;
import koneksi.user;

/**
 *
 * @author Faujixx
 */
public class setor_beras extends javax.swing.JFrame {
 public static String user;
    private  String newID;
    private static setor_beras instance;


    /**
     * Creates new form setor_beras
     */
    public setor_beras(String username) {
        initComponents();
         this.user = username;
         jTable1.setModel(loadDataToTable());
        instance = this;
        
         
    }
    
    
 public static String generateNewSetorID() {
      String newID = "B0000";

        try (Connection connection = koneksi.GetConnection();
             PreparedStatement preparedStatement = connection.prepareStatement("SELECT MAX(id_Setor) FROM menyetorkan");
             ResultSet resultSet = preparedStatement.executeQuery()) {

            if (resultSet.next()) {
                String lastID = resultSet.getString("MAX(id_Setor)");

                if (lastID != null) {
                    try {
                        int sequence = Integer.parseInt(lastID.replaceAll("\\D", "")) + 1;
                        newID = String.format("B%04d", sequence);
                    } catch (NumberFormatException e) {
                        JOptionPane.showMessageDialog(null, "Error parsing ID: " + e.getMessage());
                    }
                }
            }

        } catch (SQLException e) {
            JOptionPane.showMessageDialog(null, "Error generating ID: " + e.getMessage());
        }

        return newID;
    }


    public static void saveSetorData(String berat1, String tanggal) {
        
    try (Connection connection = koneksi.GetConnection();
         PreparedStatement preparedStatement = connection.prepareStatement("INSERT INTO menyetorkan (id_Setor, jumlah_setor, Tgl_Setor, username, id_beras) VALUES (?, ?, ?, ?, ?)")) {

        String newID = generateNewSetorID();
        preparedStatement.setString(1, newID);
        preparedStatement.setString(2, berat1);
        preparedStatement.setString(3, tanggal);
        preparedStatement.setString(4, user);
        preparedStatement.setString(5, null);  // Sesuaikan dengan nilai default yang sesuai

        preparedStatement.executeUpdate();

        

        // Setel model tabel kembali setelah menyimpan data baru
        if (instance != null) {
            instance.jTable1.setModel(loadDataToTable());
        } else {
            System.out.println("Instance setor_beras is null");
        }

    } catch (SQLException e) {
        JOptionPane.showMessageDialog(null, "Error saving data: " + e.getMessage());
    }
}

    public static DefaultTableModel loadDataToTable() {
        DefaultTableModel model = new DefaultTableModel();
        model.addColumn("ID Setor");
        model.addColumn("Berat");
        model.addColumn("Tanggal");

        try (Connection connection = koneksi.GetConnection();
             Statement statement = connection.createStatement();
            ResultSet resultSet = statement.executeQuery("select * from menyetorkan Where username ='"+ user +"'")) {
             
            while (resultSet.next()) {
                String idSetor = resultSet.getString("id_Setor");
                String berat = resultSet.getString("jumlah_setor");
                String tanggal = resultSet.getString("Tgl_Setor");

                model.addRow(new Object[]{idSetor, berat, tanggal});
            }

        } catch (SQLException e) {
            JOptionPane.showMessageDialog(null, "Error loading data from database: " + e.getMessage());
        }

        return model;
    }


    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        logout = new javax.swing.JLabel();
        home = new javax.swing.JLabel();
        back = new javax.swing.JLabel();
        berat = new javax.swing.JTextField();
        jScrollPane1 = new javax.swing.JScrollPane();
        jTable1 = new javax.swing.JTable();
        setor_btn = new rojerusan.RSMaterialButtonRectangle();
        tanggal1 = new com.github.lgooddatepicker.components.DatePicker();
        jLabel1 = new javax.swing.JLabel();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        getContentPane().setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        logout.setIcon(new javax.swing.ImageIcon(getClass().getResource("/png_ui/Vector (1).png"))); // NOI18N
        logout.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                logoutMouseClicked(evt);
            }
        });
        getContentPane().add(logout, new org.netbeans.lib.awtextra.AbsoluteConstraints(467, 28, -1, -1));

        home.setIcon(new javax.swing.ImageIcon(getClass().getResource("/png_ui/Vector.png"))); // NOI18N
        home.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                homeMouseClicked(evt);
            }
        });
        getContentPane().add(home, new org.netbeans.lib.awtextra.AbsoluteConstraints(416, 27, -1, -1));

        back.setIcon(new javax.swing.ImageIcon(getClass().getResource("/png_ui/mingcute_back-2-fill.png"))); // NOI18N
        back.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                backMouseClicked(evt);
            }
        });
        getContentPane().add(back, new org.netbeans.lib.awtextra.AbsoluteConstraints(370, 27, -1, -1));

        berat.setFont(new java.awt.Font("Montserrat", 0, 12)); // NOI18N
        berat.setBorder(null);
        getContentPane().add(berat, new org.netbeans.lib.awtextra.AbsoluteConstraints(160, 200, 200, 30));

        jTable1.setFont(new java.awt.Font("Montserrat", 0, 12)); // NOI18N
        jTable1.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null}
            },
            new String [] {
                "Title 1", "Title 2", "Title 3", "Title 4"
            }
        ));
        jScrollPane1.setViewportView(jTable1);

        getContentPane().add(jScrollPane1, new org.netbeans.lib.awtextra.AbsoluteConstraints(470, 200, 280, 290));

        setor_btn.setBackground(new java.awt.Color(34, 87, 122));
        setor_btn.setText("setor");
        setor_btn.setFont(new java.awt.Font("Montserrat", 1, 14)); // NOI18N
        setor_btn.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                setor_btnActionPerformed(evt);
            }
        });
        getContentPane().add(setor_btn, new org.netbeans.lib.awtextra.AbsoluteConstraints(355, 525, 170, 40));
        getContentPane().add(tanggal1, new org.netbeans.lib.awtextra.AbsoluteConstraints(160, 270, 200, 30));

        jLabel1.setIcon(new javax.swing.ImageIcon(getClass().getResource("/png_ui/Frame 16.png"))); // NOI18N
        getContentPane().add(jLabel1, new org.netbeans.lib.awtextra.AbsoluteConstraints(0, 0, -1, -1));

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void logoutMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_logoutMouseClicked
pertanian_main main =new pertanian_main(user);       
main.setVisible(true);
dispose();
    }//GEN-LAST:event_logoutMouseClicked

    private void backMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_backMouseClicked
main_home main= new main_home(user);
main.setVisible(true);
dispose();
    }//GEN-LAST:event_backMouseClicked

    private void homeMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_homeMouseClicked
main_home main= new main_home(user);
main.setVisible(true);
dispose();
    }//GEN-LAST:event_homeMouseClicked

    private void setor_btnActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_setor_btnActionPerformed
String berat1 = berat.getText().toString();
    String tanggal = tanggal1.getDateStringOrEmptyString(); 
    try {
        if (berat.getText().isEmpty() || tanggal.isEmpty()) {
            JOptionPane.showMessageDialog(rootPane, "Isi semua field sebelum menyimpan.");
            return;
        }
        String newID = generateNewSetorID();
        JOptionPane.showMessageDialog(rootPane, "Anda telah berhasil menyetorkan beras dengan ID: " + newID);
        saveSetorData(berat1, tanggal);
        berat.setText("");
        tanggal1.setText("");
    } catch (HeadlessException e) {
        JOptionPane.showMessageDialog(null, "Error generating ID: " + e.getMessage());
    }

    }//GEN-LAST:event_setor_btnActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(setor_beras.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(setor_beras.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(setor_beras.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(setor_beras.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new setor_beras(user).setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JLabel back;
    private javax.swing.JTextField berat;
    private javax.swing.JLabel home;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JTable jTable1;
    private javax.swing.JLabel logout;
    private rojerusan.RSMaterialButtonRectangle setor_btn;
    private com.github.lgooddatepicker.components.DatePicker tanggal1;
    // End of variables declaration//GEN-END:variables
}
